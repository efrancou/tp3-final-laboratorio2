{"ast":null,"code":"var _jsxFileName = \"/home/hola/Escritorio/laboratorio final/src/components/AplicacionCrudForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialForm = {\n  nombre: \"\",\n  apellido: \"\",\n  dni: \"\",\n  id: null\n};\n\nconst AplicacionCrudForm = ({\n  createData,\n  updateData,\n  dataToEdit,\n  setDataToEdit\n}) => {\n  _s();\n\n  const [form, setForm] = useState(initialForm);\n  useEffect(() => {\n    //actualiza e침 esta del formulario con los datos a editar\n    if (dataToEdit) {\n      setForm(dataToEdit); //Asigna al formulario los datos del registro a editar\n    } else {\n      setForm(initialForm);\n    }\n  }, [dataToEdit]); // Permite editar los datos \n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  }; // envia los datos a la base si estan completos\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!form.nombre || !form.apellido || !form.dni) {\n      alert(\"Los datos est치n incompletos\");\n      return;\n    }\n\n    if (form.id === null) {\n      createData(form);\n    } else {\n      updateData(form);\n    }\n\n    handleReset();\n  }; // limpia los campos\n\n\n  const handleReset = e => {\n    setForm(initialForm);\n    setDataToEdit(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [dataToEdit ? \"Editar\" : \"Agregar\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nombre\",\n        placeholder: \"Nombre del participante\",\n        onChange: handleChange,\n        value: form.nombreContacto,\n        class: \"campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"apellido\",\n        placeholder: \"Apellido del participante\",\n        onChange: handleChange,\n        value: form.apellidoContacto,\n        class: \"campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"dni\",\n        placeholder: \"DNI del participante\",\n        onChange: handleChange,\n        value: form.emailContacto,\n        class: \"campos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Registrar llegada\",\n        class: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"reset\",\n        value: \"Limpiar datos\",\n        onClick: handleReset,\n        class: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AplicacionCrudForm, \"LceKiMggVqn24qQrj9u4BE7Z2+4=\");\n\n_c = AplicacionCrudForm;\nexport default AplicacionCrudForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AplicacionCrudForm\");","map":{"version":3,"sources":["/home/hola/Escritorio/laboratorio final/src/components/AplicacionCrudForm.js"],"names":["React","useState","useEffect","initialForm","nombre","apellido","dni","id","AplicacionCrudForm","createData","updateData","dataToEdit","setDataToEdit","form","setForm","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","handleReset","nombreContacto","apellidoContacto","emailContacto"],"mappings":"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","sourcesContent":["\nimport React,{useState,useEffect} from \"react\";\n\n\nconst initialForm = {\n    nombre:\"\",\n    apellido:\"\",\n    dni:\"\",\n    id:null,\n};\n\nconst AplicacionCrudForm =({createData,updateData,dataToEdit,setDataToEdit}) =>{ \n    const [form,setForm]= useState(initialForm);\n\n    useEffect(()=>{//actualiza e침 esta del formulario con los datos a editar\n        if(dataToEdit){\n            setForm(dataToEdit);//Asigna al formulario los datos del registro a editar\n        }else{\n            setForm(initialForm);\n        }\n    },[dataToEdit]);\n    // Permite editar los datos \n    const handleChange = (e)=>{\n        setForm({\n            ...form,\n            [e.target.name]:e.target.value,\n        })\n    }\n    // envia los datos a la base si estan completos\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(!form.nombre||!form.apellido||!form.dni){\n            alert (\"Los datos est치n incompletos\");\n            return;\n        }\n        if (form.id===null){\n            createData(form);\n        }else{\n            updateData(form);\n        }\n        handleReset();\n    }\n    \n    \n    // limpia los campos\n    const handleReset = (e)=>{\n        setForm(initialForm);\n        setDataToEdit(null);\n    }\n\n    return(\n        <div>\n            <h3>{dataToEdit? \"Editar\":\"Agregar\"} </h3>\n            {/* introduce inputs y botones */}\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"nombre\" placeholder=\"Nombre del participante\" onChange={handleChange} value={form.nombreContacto} class=\"campos\"/>\n                <input type=\"text\" name=\"apellido\" placeholder=\"Apellido del participante\" onChange={handleChange} value={form.apellidoContacto}class=\"campos\"/>\n                <input type=\"text\" name=\"dni\" placeholder=\"DNI del participante\" onChange={handleChange} value={form.emailContacto}class=\"campos\"/>\n                <br></br>\n                <input type=\"submit\" value=\"Registrar llegada\" class=\"button\"/>\n                <input type=\"reset\" value=\"Limpiar datos\" onClick={handleReset} class=\"button\"/>\n            </form>\n        </div>\n    )\n};\nexport default AplicacionCrudForm;"]},"metadata":{},"sourceType":"module"}